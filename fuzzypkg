#!/bin/env bash

delay_exit() {
  if [ -n "${FDELAY}" ] && [ "${FDELAY}" -gt 0 ] ; then
    echo -e "\n"
    read -n 1 -s -r -p "Press any key to continue"
    echo -e "\n"
  fi
}

main() {
  trap delay_exit EXIT
  SHELL="$(command -v bash)"

  if command -v fzf > /dev/null 2>&1; then
    FUZZYSEL=fzf
    export FZF_DEFAULT_OPTS="--inline-info --marker=M"
  elif command -f sk > /dev/null 2>&1; then
    FUZZYSEL=sk
    export SKIM_DEFAULT_OPTIONS="--inline-info"
  else
    echo "Unable to find fuzzy selector [fzf, sk]"
    exit
  fi

  HEADER="[ENTER] Add/Remove selected [TAB] Toggle selection
[ALT+F] File list [ALT+H] Homepage [ALT+C] Changelog"
  HEADER="${HEADER//\[/\\033\[0;32m\[}"
  HEADER="${HEADER//\]/\]\\033\[0m}"
  HEADER="$( echo -n -e "${HEADER}" )"

  #shellcheck disable=SC2016
  selected="$(
    xbps-query -R --search= \
      | sed -Er "s/(\[\*\].*)/$( printf "\033[0;32m" )\1$( printf "\033[0m" )/"\
        | "${FUZZYSEL}" \
          --header="${HEADER}" \
          --prompt "  Package name > " \
          --layout=reverse-list \
          --cycle \
          --preview="xq {2}" \
          --preview-window=down:wrap \
          --ansi -e -m \
          --border=sharp \
          --no-sort \
          --bind "alt-f:execute[ xbps-query -v -R -f {2} | ${FUZZYSEL} --prompt '{2} > ' ]" \
          --bind 'alt-h:execute-silent[ xdg-open "$(xbps-query -p homepage -R {2})" & ]' \
          --bind 'alt-c:execute-silent[ xdg-open "$(xbps-query -p changelog -R {2})" & ]' \
          ${1:+--query "$1"}
  )"

  # override FDELAY if nothing was selected
  [ -z "${selected}" ] && FDELAY=0 exit

  installed_re="(\[.\])[ ]([^ ]+)"

  while read -r line; do
    if [[ ${line} =~ ${installed_re} ]]; then
      [ "${BASH_REMATCH[1]}" == "[-]" ] && INSTALL+=( "${BASH_REMATCH[2]}" ) || UNINSTALL+=( "${BASH_REMATCH[2]}" )
    fi
  done <<<"${selected}"

  if [ "${EUID}" -eq 0 ]; then
    PRIV=""
  elif command -v doas > /dev/null 2>&1; then
    PRIV="doas "
  elif command -v sudo > /dev/null 2>&1; then
    PRIV="sudo "
  else
    echo "Unable to execute as root, install one of [sudo, doas]"
    exit 1
  fi

  if [ -n "${UNINSTALL[*]}" ]; then
    UNINSTALL_CMD="xbps-remove -R ${UNINSTALL[*]}"
    echo "Executing ${UNINSTALL_CMD}"
    #shellcheck disable=SC2086
    ${PRIV}${UNINSTALL_CMD}
  fi
  if [ -n "${INSTALL[*]}" ]; then
    INSTALL_CMD="xbps-install -S ${INSTALL[*]}"
    echo "Executing ${INSTALL_CMD}"
    #shellcheck disable=SC2086
    ${PRIV}${INSTALL_CMD}
  fi
}

echo -n -e "\033]2;$( basename "$0" )\007"
main "$@"
